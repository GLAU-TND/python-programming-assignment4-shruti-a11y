soluton 2

import collections

def flatten(d, key='', sep='_'):
    items = []
    for k, v in d.items():
        new_key = key + sep + k if key else k
        if isinstance(v, collections.MutableMapping):
            items.extend(flatten(v, new_key, sep=sep).items())
        else:
            items.append((new_key, v))
    return dict(items)
d1 = {}
n = int(input())
d1 = [ map(str,raw_input().split()) for x in range(n)]
flatten(d1)